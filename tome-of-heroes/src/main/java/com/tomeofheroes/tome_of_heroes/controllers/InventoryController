package com.tomeofheroes.tome_of_heroes.controllers;

import com.tomeofheroes.tome_of_heroes.models.Inventory;
import com.tomeofheroes.tome_of_heroes.services.InventoryService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.UUID;

@RestController
@RequestMapping("/api/inventories")
public class InventoryController {

    @Autowired
    private InventoryService inventoryService;

    // Endpoint para obter todos os itens do inventário de um personagem
    @GetMapping("/character/{characterId}")
    public ResponseEntity<List<Inventory>> getInventoryByCharacterId(@PathVariable UUID characterId) {
        List<Inventory> inventory = inventoryService.getInventoryByCharacterId(characterId);
        return ResponseEntity.ok(inventory);
    }

    // Endpoint para obter um item específico do inventário pelo ID
    @GetMapping("/{id}")
    public ResponseEntity<Inventory> getInventoryItemById(@PathVariable UUID id) {
        Inventory inventoryItem = inventoryService.getInventoryItemById(id);
        return ResponseEntity.ok(inventoryItem);
    }

    // Endpoint para adicionar um novo item ao inventário de um personagem
    @PostMapping
    public ResponseEntity<Inventory> addInventoryItem(@RequestBody Inventory inventoryItem) {
        Inventory newInventoryItem = inventoryService.addInventoryItem(inventoryItem);
        return ResponseEntity.ok(newInventoryItem);
    }

    // Endpoint para atualizar um item do inventário
    @PutMapping("/{id}")
    public ResponseEntity<Inventory> updateInventoryItem(@PathVariable UUID id, @RequestBody Inventory inventoryItem) {
        Inventory updatedInventoryItem = inventoryService.updateInventoryItem(id, inventoryItem);
        return ResponseEntity.ok(updatedInventoryItem);
    }

    // Endpoint para remover um item do inventário
    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteInventoryItem(@PathVariable UUID id) {
        inventoryService.deleteInventoryItem(id);
        return ResponseEntity.noContent().build();
    }
}